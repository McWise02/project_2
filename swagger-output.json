{
  "swagger": "2.0",
  "info": {
    "title": "Contacts API",
    "description": "Get, Post, Put, Delete movies in MongoDB",
    "version": "1.0.0"
  },
  "host": "cse-342-project-1.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],

  "paths": {
    "/movies/create": {
      "post": {
        "description": "Create a new movie",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MovieCreate" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Movie created successfully" },
                "movieId": { "type": "string", "example": "66f2b0c2d3f4a15a3c9e0b12" }
              }
            }
          },
          "400": {
            "description": "Bad Request (validation failed)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/movies/update/{id}": {
      "put": {
        "description": "Update a movie by ID. Only non-empty fields are updated.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the movie"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/MovieUpdate" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Movie updated successfully" }
              }
            }
          },
          "400": { "description": "Bad Request (validation failed)" },
          "404": { "description": "Movie not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },

    "/movies/delete/{id}": {
      "delete": {
        "description": "Delete a movie by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the movie"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Movie deleted" }
              }
            }
          },
          "404": { "description": "Movie not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },

    "/movies/": {
      "get": {
        "description": "List all movies",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Movie" }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },

    "/movies/{id}": {
      "get": {
        "description": "Get a movie by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the movie"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Movie" }
          },
          "404": { "description": "Movie not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  },

  "definitions": {
    "Movie": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "66f2b0c2d3f4a15a3c9e0b12" },
        "title": { "type": "string", "maxLength": 30, "example": "Inception" },
        "producer": { "type": "string", "maxLength": 30, "pattern": "^[A-Za-z ]+$", "example": "Emma Thomas" },
        "director": { "type": "string", "maxLength": 30, "pattern": "^[A-Za-z ]+$", "example": "Christopher Nolan" },
        "lengthMs": { "type": "integer", "minimum": 1, "example": 8880000 },
        "genre": { "type": "string", "maxLength": 15, "pattern": "^[A-Za-z ]+$", "example": "SciFi" },
        "releaseDate": { "type": "string", "format": "date-time", "example": "2010-07-16T00:00:00Z" }
      }
    }

  }
}
